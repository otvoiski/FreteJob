/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Util.Enums;
import Util.Error;
import Util.Helper;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author Otavio
 */
public class EncomendaBuscaPessoa extends javax.swing.JFrame {

    private final JFrame backWindows;
    private int pessoaID;
    private Util.Enums.TipoPessoa tipoPessoa;
    private View.Encomenda viewEncomenda;
    private List<JSONObject> Clientes;

    /*public BuscaPessoaEncomenda(JFrame backWindows,JTextField jtfPessoa, JTextField jtfPessoaCodigo, int pessoaID, Util.Enums.TipoPessoa tipoPessoa) {
        initComponents();
        this.jtfPessoa = jtfPessoa;
        this.backWindows = backWindows;
        this.pessoaID = pessoaID;
        this.pessoaCodigo = jtfPessoaCodigo;
        this.tipoPessoa = tipoPessoa;
        
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(2).setPreferredWidth(50);
    }*/
    public EncomendaBuscaPessoa(View.Encomenda encomenda) {
        initComponents();
        this.viewEncomenda = encomenda;
        this.backWindows = encomenda;
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(2).setPreferredWidth(50);
        this.jtfCampoPesquisa.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfCampoPesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jCheckQualqParte = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar Pessoa");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Nome da Pessoa");

        jtfCampoPesquisa.setToolTipText("Cidade");
        jtfCampoPesquisa.setName("Pesquisa"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nome", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Selecionar");
        jButton1.setMaximumSize(new java.awt.Dimension(73, 40));
        jButton1.setMinimumSize(new java.awt.Dimension(73, 40));
        jButton1.setPreferredSize(new java.awt.Dimension(73, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jCheckQualqParte.setText("Qualquer parte");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckQualqParte))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfCampoPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCheckQualqParte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCampoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here: 
        Helper.CloseDialog(this, backWindows);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        Helper.CloseDialog(this, backWindows);
    }//GEN-LAST:event_formWindowClosing

    private void PreencheJTable(JTable jTable, List<JSONObject> list) {
        DefaultTableModel table = (DefaultTableModel) jTable.getModel();
        table.setNumRows(0);

        list.forEach((json) -> {
            if (json.getEnum(Util.Enums.TipoPessoa.class, "tipoPessoa").compareTo(Enums.TipoPessoa.Fisica) == 0) {
                table.addRow(new String[]{
                    json.getInt("codigo") + "",
                    json.getString("nome"),
                    json.getEnum(Util.Enums.TipoPessoa.class, "tipoPessoa").toString()
                });
            } else {
                table.addRow(new String[]{
                    json.getInt("codigo") + "",
                    json.getString("nomeFantasia"),
                    json.getEnum(Util.Enums.TipoPessoa.class, "tipoPessoa").toString()
                });
            }
        });
        if (table.getRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Pessoa não encontrada!");
        }

        jTable.setModel(table);
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        List<JSONObject> pessoasFisicas;
        List<JSONObject> pessoaJuridicas;
        try {
            if (jCheckQualqParte.isSelected()) {
                pessoasFisicas = (new Controller.PessoaFisicaController()).GetPessoaByName("%" + Util.Validacao.InputToString(jtfCampoPesquisa));
                pessoaJuridicas = (new Controller.PessoaJuridicaController()).GetPessoaByName("%" + jtfCampoPesquisa.getText());
            } else {
                pessoasFisicas = (new Controller.PessoaFisicaController()).GetPessoaByName(Util.Validacao.InputToString(jtfCampoPesquisa));
                pessoaJuridicas = (new Controller.PessoaJuridicaController()).GetPessoaByName(jtfCampoPesquisa.getText());
            }
            Clientes = new ArrayList<>(pessoasFisicas);
            Clientes.addAll(pessoaJuridicas);
            PreencheJTable(jTable1, Clientes);
        } catch (Error ex) {
            //JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (jTable1.getSelectedRow() != -1) {
                JSONObject clienteSelecionado = Clientes.get(jTable1.getSelectedRow());
                JSONArray jsonAux;
                pessoaID = Integer.parseInt(Util.Validacao.InputToString(new JTextField((String) Helper.GetValueJTable(jTable1, 0))));
                String nome = Util.Validacao.InputToString(new JTextField((String) Helper.GetValueJTable(jTable1, 1)));

                if(viewEncomenda.getBusca().equals("Remetente")) {
                    viewEncomenda.getJtfRemetenteNome().setText(nome);
                    viewEncomenda.getJtfRemetenteCodigo().setText(String.valueOf(pessoaID));
                    if (clienteSelecionado.has("enderecos")) {
                        jsonAux = clienteSelecionado.getJSONArray("enderecos");
                        for (int i = 0; i < jsonAux.length(); i++) {

                            if (jsonAux.getJSONObject(i).getEnum(Util.Enums.TipoEndereco.class, "tipo").compareTo(Enums.TipoEndereco.Coleta) == 0 ||jsonAux.getJSONObject(i).getEnum(Util.Enums.TipoEndereco.class, "tipo").compareTo(Enums.TipoEndereco.Principal) == 0 ) {
                                viewEncomenda.getJtfRua().setText(jsonAux.getJSONObject(i).getString("rua"));
                                viewEncomenda.getJtfBairro().setText(jsonAux.getJSONObject(i).getString("bairro"));
                                viewEncomenda.getJtfCep().setText(jsonAux.getJSONObject(i).getString("cep"));
                                viewEncomenda.getJtfNumero().setText(jsonAux.getJSONObject(i).getString("numero"));
                                if (jsonAux.getJSONObject(i).has("complemento")) {
                                    viewEncomenda.getJtfComplemento().setText(jsonAux.getJSONObject(i).getString("complemento"));
                                }

                                viewEncomenda.getJtfCidadeOrigemCodigo().setText(String.valueOf(jsonAux.getJSONObject(i).getJSONObject("cidade").getInt("codigo")));
                                viewEncomenda.getJtfCidadeOrigemNome().setText(String.valueOf(jsonAux.getJSONObject(i).getJSONObject("cidade").getString("nome")));
                                i = jsonAux.length();
                            }
                        }
                    }
                } else {
                    viewEncomenda.getJtfDestinatarioNome().setText(nome);
                    viewEncomenda.getJtfDestinatarioCodigo().setText(String.valueOf(pessoaID));
                    if (clienteSelecionado.has("enderecos")) {
                        jsonAux = clienteSelecionado.getJSONArray("enderecos");
                        for (int i = 0; i < jsonAux.length(); i++) {
                            if (jsonAux.getJSONObject(i).getEnum(Util.Enums.TipoEndereco.class, "tipo").compareTo(Enums.TipoEndereco.Entrega) == 0||jsonAux.getJSONObject(i).getEnum(Util.Enums.TipoEndereco.class, "tipo").compareTo(Enums.TipoEndereco.Principal) == 0 ) {
                                viewEncomenda.getJtfRuaDestino().setText(jsonAux.getJSONObject(i).getString("rua"));
                                viewEncomenda.getJtfBairroDestino().setText(jsonAux.getJSONObject(i).getString("bairro"));
                                viewEncomenda.getJtfCepDestino().setText(jsonAux.getJSONObject(i).getString("cep"));
                                viewEncomenda.getJtfNumeroDestino().setText(jsonAux.getJSONObject(i).getString("numero"));
                                if (jsonAux.getJSONObject(i).has("complemento")) {
                                    viewEncomenda.getJtfComplementoDestino().setText(jsonAux.getJSONObject(i).getString("complemento"));
                                }

                                viewEncomenda.getJtfCidadeDestinoCodigo().setText(String.valueOf(jsonAux.getJSONObject(i).getJSONObject("cidade").getInt("codigo")));
                                viewEncomenda.getJtfCidadeDestinoNome().setText(String.valueOf(jsonAux.getJSONObject(i).getJSONObject("cidade").getString("nome")));
                                i = jsonAux.length();
                            }
                        }
                    }
                }
                
                if(jTable1.getValueAt(jTable1.getSelectedRow(), 2) == Util.Enums.TipoPessoa.Fisica.toString())
                    if(viewEncomenda.getBusca().equals("Destinatario"))
                        viewEncomenda.setTipoDestinatario(Util.Enums.TipoPessoa.Fisica);
                    else
                        viewEncomenda.setTipoRemetente(Util.Enums.TipoPessoa.Fisica);
                else
                    if(viewEncomenda.getBusca().equals("Destinatario"))
                        viewEncomenda.setTipoDestinatario(Util.Enums.TipoPessoa.Juridica);
                    else
                        viewEncomenda.setTipoRemetente(Util.Enums.TipoPessoa.Juridica);
                
                Helper.CloseDialog(this, backWindows);
            }
        } catch (Error e) {
            //JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncomendaBuscaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncomendaBuscaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncomendaBuscaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncomendaBuscaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncomendaBuscaPessoa(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckQualqParte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jtfCampoPesquisa;
    // End of variables declaration//GEN-END:variables

    private Object JSONArray(String estado) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
